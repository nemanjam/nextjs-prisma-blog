generator client {
  provider = "prisma-client-js"
}

datasource postgresql {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @default(autoincrement()) @id
  email      String    @unique
  username   String    @unique
  password   String
  role       String    @default("USER")
  bio        String?
  image      String?
  articles   Article[] @relation("UserArticles") // named relation, must, user and article have 2 relations
  favorites  Article[] @relation("UserFavorites", references: [id]) // m:n
  followedBy User[]    @relation("UserFollows", references: [id])
  following  User[]    @relation("UserFollows", references: [id])
  comments   Comment[]
}

model Article {
  id          Int        @default(autoincrement()) @id
  slug        String     @unique
  title       String
  description String
  body        String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now())
  author      User       @relation("UserArticles", fields: [authorId], references: [id])
  authorId    Int
  favoritedBy User[]     @relation("UserFavorites", references: [id])
  comments    Comment[]
  categories  Category[] @relation("ArticlesCategories", references: [id])
}

model Comment {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  body      String
  article   Article  @relation(fields: [articleId], references: [id])
  articleId Int
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
}

model Category {
  id       Int       @default(autoincrement()) @id
  name     String    @unique
  articles Article[] @relation("ArticlesCategories", references: [id])
}
